{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nrequire(\"core-js/modules/web.immediate.js\");\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signTypedData = exports.createAccessList = exports.getFeeHistory = exports.getProof = exports.getChainId = exports.getLogs = exports.estimateGas = exports.call = exports.signTransaction = exports.sign = exports.sendSignedTransaction = exports.sendTransaction = exports.getTransactionCount = exports.getTransactionReceipt = exports.getTransactionFromBlock = exports.getPendingTransactions = exports.getTransaction = exports.getUncle = exports.getBlockUncleCount = exports.getBlockTransactionCount = exports.getBlock = exports.getCode = exports.getStorageAt = exports.getBalance = exports.getBlockNumber = exports.getGasPrice = exports.getHashRate = exports.isMining = exports.getCoinbase = exports.isSyncing = exports.getProtocolVersion = void 0;\n// Disabling because returnTypes must be last param to match 1.x params\n/* eslint-disable default-param-last */\nconst web3_types_1 = require(\"web3-types\");\nconst web3_core_1 = require(\"web3-core\");\nconst web3_utils_1 = require(\"web3-utils\");\nconst web3_eth_accounts_1 = require(\"web3-eth-accounts\");\nconst web3_validator_1 = require(\"web3-validator\");\nconst web3_errors_1 = require(\"web3-errors\");\nconst web3_rpc_methods_1 = require(\"web3-rpc-methods\");\nconst decode_signed_transaction_js_1 = require(\"./utils/decode_signed_transaction.js\");\nconst schemas_js_1 = require(\"./schemas.js\");\n// eslint-disable-next-line import/no-cycle\nconst transaction_builder_js_1 = require(\"./utils/transaction_builder.js\");\nconst format_transaction_js_1 = require(\"./utils/format_transaction.js\");\n// eslint-disable-next-line import/no-cycle\nconst try_send_transaction_js_1 = require(\"./utils/try_send_transaction.js\");\n// eslint-disable-next-line import/no-cycle\nconst wait_for_transaction_receipt_js_1 = require(\"./utils/wait_for_transaction_receipt.js\");\nconst constants_js_1 = require(\"./constants.js\");\n// eslint-disable-next-line import/no-cycle\nconst send_tx_helper_js_1 = require(\"./utils/send_tx_helper.js\");\n/**\n * View additional documentations here: {@link Web3Eth.getProtocolVersion}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nconst getProtocolVersion = web3Context => __awaiter(void 0, void 0, void 0, function* () {\n  return web3_rpc_methods_1.ethRpcMethods.getProtocolVersion(web3Context.requestManager);\n});\nexports.getProtocolVersion = getProtocolVersion;\n// TODO Add returnFormat parameter\n/**\n * View additional documentations here: {@link Web3Eth.isSyncing}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nconst isSyncing = web3Context => __awaiter(void 0, void 0, void 0, function* () {\n  return web3_rpc_methods_1.ethRpcMethods.getSyncing(web3Context.requestManager);\n});\nexports.isSyncing = isSyncing;\n// TODO consider adding returnFormat parameter (to format address as bytes)\n/**\n * View additional documentations here: {@link Web3Eth.getCoinbase}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nconst getCoinbase = web3Context => __awaiter(void 0, void 0, void 0, function* () {\n  return web3_rpc_methods_1.ethRpcMethods.getCoinbase(web3Context.requestManager);\n});\nexports.getCoinbase = getCoinbase;\n/**\n * View additional documentations here: {@link Web3Eth.isMining}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nconst isMining = web3Context => __awaiter(void 0, void 0, void 0, function* () {\n  return web3_rpc_methods_1.ethRpcMethods.getMining(web3Context.requestManager);\n});\nexports.isMining = isMining;\n/**\n * View additional documentations here: {@link Web3Eth.getHashRate}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getHashRate(web3Context, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getHashRate(web3Context.requestManager);\n    return (0, web3_utils_1.format)({\n      format: 'uint'\n    }, response, returnFormat);\n  });\n}\nexports.getHashRate = getHashRate;\n/**\n * View additional documentations here: {@link Web3Eth.getGasPrice}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getGasPrice(web3Context, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getGasPrice(web3Context.requestManager);\n    return (0, web3_utils_1.format)({\n      format: 'uint'\n    }, response, returnFormat);\n  });\n}\nexports.getGasPrice = getGasPrice;\n/**\n * View additional documentations here: {@link Web3Eth.getBlockNumber}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getBlockNumber(web3Context, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getBlockNumber(web3Context.requestManager);\n    return (0, web3_utils_1.format)({\n      format: 'uint'\n    }, response, returnFormat);\n  });\n}\nexports.getBlockNumber = getBlockNumber;\n/**\n * View additional documentations here: {@link Web3Eth.getBalance}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getBalance(web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(blockNumber) ? blockNumber : (0, web3_utils_1.format)({\n      format: 'uint'\n    }, blockNumber, web3_types_1.ETH_DATA_FORMAT);\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getBalance(web3Context.requestManager, address, blockNumberFormatted);\n    return (0, web3_utils_1.format)({\n      format: 'uint'\n    }, response, returnFormat);\n  });\n}\nexports.getBalance = getBalance;\n/**\n * View additional documentations here: {@link Web3Eth.getStorageAt}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getStorageAt(web3Context, address, storageSlot, blockNumber = web3Context.defaultBlock, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const storageSlotFormatted = (0, web3_utils_1.format)({\n      format: 'uint'\n    }, storageSlot, web3_types_1.ETH_DATA_FORMAT);\n    const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(blockNumber) ? blockNumber : (0, web3_utils_1.format)({\n      format: 'uint'\n    }, blockNumber, web3_types_1.ETH_DATA_FORMAT);\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getStorageAt(web3Context.requestManager, address, storageSlotFormatted, blockNumberFormatted);\n    return (0, web3_utils_1.format)({\n      format: 'bytes'\n    }, response, returnFormat);\n  });\n}\nexports.getStorageAt = getStorageAt;\n/**\n * View additional documentations here: {@link Web3Eth.getCode}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getCode(web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(blockNumber) ? blockNumber : (0, web3_utils_1.format)({\n      format: 'uint'\n    }, blockNumber, web3_types_1.ETH_DATA_FORMAT);\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getCode(web3Context.requestManager, address, blockNumberFormatted);\n    return (0, web3_utils_1.format)({\n      format: 'bytes'\n    }, response, returnFormat);\n  });\n}\nexports.getCode = getCode;\n/**\n * View additional documentations here: {@link Web3Eth.getBlock}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getBlock(web3Context, block = web3Context.defaultBlock, hydrated = false, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let response;\n    if ((0, web3_validator_1.isBytes)(block)) {\n      const blockHashFormatted = (0, web3_utils_1.format)({\n        format: 'bytes32'\n      }, block, web3_types_1.ETH_DATA_FORMAT);\n      response = yield web3_rpc_methods_1.ethRpcMethods.getBlockByHash(web3Context.requestManager, blockHashFormatted, hydrated);\n    } else {\n      const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(block) ? block : (0, web3_utils_1.format)({\n        format: 'uint'\n      }, block, web3_types_1.ETH_DATA_FORMAT);\n      response = yield web3_rpc_methods_1.ethRpcMethods.getBlockByNumber(web3Context.requestManager, blockNumberFormatted, hydrated);\n    }\n    return (0, web3_utils_1.format)(schemas_js_1.blockSchema, response, returnFormat);\n  });\n}\nexports.getBlock = getBlock;\n/**\n * View additional documentations here: {@link Web3Eth.getBlockTransactionCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getBlockTransactionCount(web3Context, block = web3Context.defaultBlock, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let response;\n    if ((0, web3_validator_1.isBytes)(block)) {\n      const blockHashFormatted = (0, web3_utils_1.format)({\n        format: 'bytes32'\n      }, block, web3_types_1.ETH_DATA_FORMAT);\n      response = yield web3_rpc_methods_1.ethRpcMethods.getBlockTransactionCountByHash(web3Context.requestManager, blockHashFormatted);\n    } else {\n      const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(block) ? block : (0, web3_utils_1.format)({\n        format: 'uint'\n      }, block, web3_types_1.ETH_DATA_FORMAT);\n      response = yield web3_rpc_methods_1.ethRpcMethods.getBlockTransactionCountByNumber(web3Context.requestManager, blockNumberFormatted);\n    }\n    return (0, web3_utils_1.format)({\n      format: 'uint'\n    }, response, returnFormat);\n  });\n}\nexports.getBlockTransactionCount = getBlockTransactionCount;\n/**\n * View additional documentations here: {@link Web3Eth.getBlockUncleCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getBlockUncleCount(web3Context, block = web3Context.defaultBlock, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    let response;\n    if ((0, web3_validator_1.isBytes)(block)) {\n      const blockHashFormatted = (0, web3_utils_1.format)({\n        format: 'bytes32'\n      }, block, web3_types_1.ETH_DATA_FORMAT);\n      response = yield web3_rpc_methods_1.ethRpcMethods.getUncleCountByBlockHash(web3Context.requestManager, blockHashFormatted);\n    } else {\n      const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(block) ? block : (0, web3_utils_1.format)({\n        format: 'uint'\n      }, block, web3_types_1.ETH_DATA_FORMAT);\n      response = yield web3_rpc_methods_1.ethRpcMethods.getUncleCountByBlockNumber(web3Context.requestManager, blockNumberFormatted);\n    }\n    return (0, web3_utils_1.format)({\n      format: 'uint'\n    }, response, returnFormat);\n  });\n}\nexports.getBlockUncleCount = getBlockUncleCount;\n/**\n * View additional documentations here: {@link Web3Eth.getUncle}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getUncle(web3Context, block = web3Context.defaultBlock, uncleIndex, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const uncleIndexFormatted = (0, web3_utils_1.format)({\n      format: 'uint'\n    }, uncleIndex, web3_types_1.ETH_DATA_FORMAT);\n    let response;\n    if ((0, web3_validator_1.isBytes)(block)) {\n      const blockHashFormatted = (0, web3_utils_1.format)({\n        format: 'bytes32'\n      }, block, web3_types_1.ETH_DATA_FORMAT);\n      response = yield web3_rpc_methods_1.ethRpcMethods.getUncleByBlockHashAndIndex(web3Context.requestManager, blockHashFormatted, uncleIndexFormatted);\n    } else {\n      const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(block) ? block : (0, web3_utils_1.format)({\n        format: 'uint'\n      }, block, web3_types_1.ETH_DATA_FORMAT);\n      response = yield web3_rpc_methods_1.ethRpcMethods.getUncleByBlockNumberAndIndex(web3Context.requestManager, blockNumberFormatted, uncleIndexFormatted);\n    }\n    return (0, web3_utils_1.format)(schemas_js_1.blockSchema, response, returnFormat);\n  });\n}\nexports.getUncle = getUncle;\n/**\n * View additional documentations here: {@link Web3Eth.getTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getTransaction(web3Context, transactionHash, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const transactionHashFormatted = (0, web3_utils_1.format)({\n      format: 'bytes32'\n    }, transactionHash, web3_types_1.DEFAULT_RETURN_FORMAT);\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getTransactionByHash(web3Context.requestManager, transactionHashFormatted);\n    return (0, web3_validator_1.isNullish)(response) ? response : (0, format_transaction_js_1.formatTransaction)(response, returnFormat, {\n      fillInputAndData: true\n    });\n  });\n}\nexports.getTransaction = getTransaction;\n/**\n * View additional documentations here: {@link Web3Eth.getPendingTransactions}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getPendingTransactions(web3Context, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getPendingTransactions(web3Context.requestManager);\n    return response.map(transaction => (0, format_transaction_js_1.formatTransaction)(transaction, returnFormat, {\n      fillInputAndData: true\n    }));\n  });\n}\nexports.getPendingTransactions = getPendingTransactions;\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionFromBlock}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getTransactionFromBlock(web3Context, block = web3Context.defaultBlock, transactionIndex, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const transactionIndexFormatted = (0, web3_utils_1.format)({\n      format: 'uint'\n    }, transactionIndex, web3_types_1.ETH_DATA_FORMAT);\n    let response;\n    if ((0, web3_validator_1.isBytes)(block)) {\n      const blockHashFormatted = (0, web3_utils_1.format)({\n        format: 'bytes32'\n      }, block, web3_types_1.ETH_DATA_FORMAT);\n      response = yield web3_rpc_methods_1.ethRpcMethods.getTransactionByBlockHashAndIndex(web3Context.requestManager, blockHashFormatted, transactionIndexFormatted);\n    } else {\n      const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(block) ? block : (0, web3_utils_1.format)({\n        format: 'uint'\n      }, block, web3_types_1.ETH_DATA_FORMAT);\n      response = yield web3_rpc_methods_1.ethRpcMethods.getTransactionByBlockNumberAndIndex(web3Context.requestManager, blockNumberFormatted, transactionIndexFormatted);\n    }\n    return (0, web3_validator_1.isNullish)(response) ? response : (0, format_transaction_js_1.formatTransaction)(response, returnFormat, {\n      fillInputAndData: true\n    });\n  });\n}\nexports.getTransactionFromBlock = getTransactionFromBlock;\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionReceipt}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getTransactionReceipt(web3Context, transactionHash, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const transactionHashFormatted = (0, web3_utils_1.format)({\n      format: 'bytes32'\n    }, transactionHash, web3_types_1.DEFAULT_RETURN_FORMAT);\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getTransactionReceipt(web3Context.requestManager, transactionHashFormatted);\n    return (0, web3_validator_1.isNullish)(response) ? response : (0, web3_utils_1.format)(schemas_js_1.transactionReceiptSchema, response, returnFormat);\n  });\n}\nexports.getTransactionReceipt = getTransactionReceipt;\n/**\n * View additional documentations here: {@link Web3Eth.getTransactionCount}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getTransactionCount(web3Context, address, blockNumber = web3Context.defaultBlock, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(blockNumber) ? blockNumber : (0, web3_utils_1.format)({\n      format: 'uint'\n    }, blockNumber, web3_types_1.ETH_DATA_FORMAT);\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getTransactionCount(web3Context.requestManager, address, blockNumberFormatted);\n    return (0, web3_utils_1.format)({\n      format: 'uint'\n    }, response, returnFormat);\n  });\n}\nexports.getTransactionCount = getTransactionCount;\n/**\n * View additional documentations here: {@link Web3Eth.sendTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction sendTransaction(web3Context, transaction, returnFormat, options = {\n  checkRevertBeforeSending: true\n}) {\n  const promiEvent = new web3_core_1.Web3PromiEvent((resolve, reject) => {\n    setImmediate(() => {\n      (() => __awaiter(this, void 0, void 0, function* () {\n        const sendTxHelper = new send_tx_helper_js_1.SendTxHelper({\n          web3Context,\n          promiEvent,\n          options,\n          returnFormat\n        });\n        let transactionFormatted = (0, format_transaction_js_1.formatTransaction)(Object.assign(Object.assign({}, transaction), {\n          from: (0, transaction_builder_js_1.getTransactionFromOrToAttr)('from', web3Context, transaction),\n          to: (0, transaction_builder_js_1.getTransactionFromOrToAttr)('to', web3Context, transaction)\n        }), web3_types_1.ETH_DATA_FORMAT);\n        try {\n          transactionFormatted = yield sendTxHelper.populateGasPrice({\n            transaction,\n            transactionFormatted\n          });\n          yield sendTxHelper.checkRevertBeforeSending(transactionFormatted);\n          sendTxHelper.emitSending(transactionFormatted);\n          let wallet;\n          if (web3Context.wallet && !(0, web3_validator_1.isNullish)(transactionFormatted.from)) {\n            wallet = web3Context.wallet.get(transactionFormatted.from);\n          }\n          const transactionHash = yield sendTxHelper.signAndSend({\n            wallet,\n            tx: transactionFormatted\n          });\n          const transactionHashFormatted = (0, web3_utils_1.format)({\n            format: 'bytes32'\n          }, transactionHash, returnFormat);\n          sendTxHelper.emitSent(transactionFormatted);\n          sendTxHelper.emitTransactionHash(transactionHashFormatted);\n          const transactionReceipt = yield (0, wait_for_transaction_receipt_js_1.waitForTransactionReceipt)(web3Context, transactionHash, returnFormat);\n          const transactionReceiptFormatted = sendTxHelper.getReceiptWithEvents((0, web3_utils_1.format)(schemas_js_1.transactionReceiptSchema, transactionReceipt, returnFormat));\n          sendTxHelper.emitReceipt(transactionReceiptFormatted);\n          resolve(yield sendTxHelper.handleResolve({\n            receipt: transactionReceiptFormatted,\n            tx: transactionFormatted\n          }));\n          sendTxHelper.emitConfirmation({\n            receipt: transactionReceiptFormatted,\n            transactionHash\n          });\n        } catch (error) {\n          reject(yield sendTxHelper.handleError({\n            error,\n            tx: transactionFormatted\n          }));\n        }\n      }))();\n    });\n  });\n  return promiEvent;\n}\nexports.sendTransaction = sendTransaction;\n/**\n * View additional documentations here: {@link Web3Eth.sendSignedTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction sendSignedTransaction(web3Context, signedTransaction, returnFormat, options = {\n  checkRevertBeforeSending: true\n}) {\n  // TODO - Promise returned in function argument where a void return was expected\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  const promiEvent = new web3_core_1.Web3PromiEvent((resolve, reject) => {\n    setImmediate(() => {\n      (() => __awaiter(this, void 0, void 0, function* () {\n        const sendTxHelper = new send_tx_helper_js_1.SendTxHelper({\n          web3Context,\n          promiEvent,\n          options,\n          returnFormat\n        });\n        // Formatting signedTransaction to be send to RPC endpoint\n        const signedTransactionFormattedHex = (0, web3_utils_1.format)({\n          format: 'bytes'\n        }, signedTransaction, web3_types_1.ETH_DATA_FORMAT);\n        const unSerializedTransaction = web3_eth_accounts_1.TransactionFactory.fromSerializedData((0, web3_utils_1.bytesToUint8Array)((0, web3_utils_1.hexToBytes)(signedTransactionFormattedHex)));\n        const unSerializedTransactionWithFrom = Object.assign(Object.assign({}, unSerializedTransaction.toJSON()), {\n          // Some providers will default `from` to address(0) causing the error\n          // reported from `eth_call` to not be the reason the user's tx failed\n          // e.g. `eth_call` will return an Out of Gas error for a failed\n          // smart contract execution contract, because the sender, address(0),\n          // has no balance to pay for the gas of the transaction execution\n          from: unSerializedTransaction.getSenderAddress().toString()\n        });\n        try {\n          const {\n              v,\n              r,\n              s\n            } = unSerializedTransactionWithFrom,\n            txWithoutSigParams = __rest(unSerializedTransactionWithFrom, [\"v\", \"r\", \"s\"]);\n          yield sendTxHelper.checkRevertBeforeSending(txWithoutSigParams);\n          sendTxHelper.emitSending(signedTransactionFormattedHex);\n          const transactionHash = yield (0, try_send_transaction_js_1.trySendTransaction)(web3Context, () => __awaiter(this, void 0, void 0, function* () {\n            return web3_rpc_methods_1.ethRpcMethods.sendRawTransaction(web3Context.requestManager, signedTransactionFormattedHex);\n          }));\n          sendTxHelper.emitSent(signedTransactionFormattedHex);\n          const transactionHashFormatted = (0, web3_utils_1.format)({\n            format: 'bytes32'\n          }, transactionHash, returnFormat);\n          sendTxHelper.emitTransactionHash(transactionHashFormatted);\n          const transactionReceipt = yield (0, wait_for_transaction_receipt_js_1.waitForTransactionReceipt)(web3Context, transactionHash, returnFormat);\n          const transactionReceiptFormatted = sendTxHelper.getReceiptWithEvents((0, web3_utils_1.format)(schemas_js_1.transactionReceiptSchema, transactionReceipt, returnFormat));\n          sendTxHelper.emitReceipt(transactionReceiptFormatted);\n          resolve(yield sendTxHelper.handleResolve({\n            receipt: transactionReceiptFormatted,\n            tx: unSerializedTransactionWithFrom\n          }));\n          sendTxHelper.emitConfirmation({\n            receipt: transactionReceiptFormatted,\n            transactionHash\n          });\n        } catch (error) {\n          reject(yield sendTxHelper.handleError({\n            error,\n            tx: unSerializedTransactionWithFrom\n          }));\n        }\n      }))();\n    });\n  });\n  return promiEvent;\n}\nexports.sendSignedTransaction = sendSignedTransaction;\n/**\n * View additional documentations here: {@link Web3Eth.sign}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction sign(web3Context, message, addressOrIndex, returnFormat) {\n  var _a;\n  return __awaiter(this, void 0, void 0, function* () {\n    const messageFormatted = (0, web3_utils_1.format)({\n      format: 'bytes'\n    }, message, web3_types_1.DEFAULT_RETURN_FORMAT);\n    if ((_a = web3Context.wallet) === null || _a === void 0 ? void 0 : _a.get(addressOrIndex)) {\n      const wallet = web3Context.wallet.get(addressOrIndex);\n      const signed = wallet.sign(messageFormatted);\n      return (0, web3_utils_1.format)(schemas_js_1.SignatureObjectSchema, signed, returnFormat);\n    }\n    if (typeof addressOrIndex === 'number') {\n      throw new web3_errors_1.SignatureError(message, 'RPC method \"eth_sign\" does not support index signatures');\n    }\n    const response = yield web3_rpc_methods_1.ethRpcMethods.sign(web3Context.requestManager, addressOrIndex, messageFormatted);\n    return (0, web3_utils_1.format)({\n      format: 'bytes'\n    }, response, returnFormat);\n  });\n}\nexports.sign = sign;\n/**\n * View additional documentations here: {@link Web3Eth.signTransaction}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction signTransaction(web3Context, transaction, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield web3_rpc_methods_1.ethRpcMethods.signTransaction(web3Context.requestManager, (0, format_transaction_js_1.formatTransaction)(transaction, web3_types_1.ETH_DATA_FORMAT));\n    // Some clients only return the encoded signed transaction (e.g. Ganache)\n    // while clients such as Geth return the desired SignedTransactionInfoAPI object\n    return (0, web3_validator_1.isString)(response) ? (0, decode_signed_transaction_js_1.decodeSignedTransaction)(response, returnFormat, {\n      fillInputAndData: true\n    }) : {\n      raw: (0, web3_utils_1.format)({\n        format: 'bytes'\n      }, response.raw, returnFormat),\n      tx: (0, format_transaction_js_1.formatTransaction)(response.tx, returnFormat, {\n        fillInputAndData: true\n      })\n    };\n  });\n}\nexports.signTransaction = signTransaction;\n// TODO Decide what to do with transaction.to\n// https://github.com/ChainSafe/web3.js/pull/4525#issuecomment-982330076\n/**\n * View additional documentations here: {@link Web3Eth.call}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction call(web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(blockNumber) ? blockNumber : (0, web3_utils_1.format)({\n      format: 'uint'\n    }, blockNumber, web3_types_1.ETH_DATA_FORMAT);\n    const response = yield web3_rpc_methods_1.ethRpcMethods.call(web3Context.requestManager, (0, format_transaction_js_1.formatTransaction)(transaction, web3_types_1.ETH_DATA_FORMAT), blockNumberFormatted);\n    return (0, web3_utils_1.format)({\n      format: 'bytes'\n    }, response, returnFormat);\n  });\n}\nexports.call = call;\n// TODO - Investigate whether response is padded as 1.x docs suggest\n/**\n * View additional documentations here: {@link Web3Eth.estimateGas}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction estimateGas(web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const transactionFormatted = (0, format_transaction_js_1.formatTransaction)(transaction, web3_types_1.ETH_DATA_FORMAT);\n    const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(blockNumber) ? blockNumber : (0, web3_utils_1.format)({\n      format: 'uint'\n    }, blockNumber, web3_types_1.ETH_DATA_FORMAT);\n    const response = yield web3_rpc_methods_1.ethRpcMethods.estimateGas(web3Context.requestManager, transactionFormatted, blockNumberFormatted);\n    return (0, web3_utils_1.format)({\n      format: 'uint'\n    }, response, returnFormat);\n  });\n}\nexports.estimateGas = estimateGas;\n// TODO - Add input formatting to filter\n/**\n * View additional documentations here: {@link Web3Eth.getPastLogs}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getLogs(web3Context, filter, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    // format type bigint or number toBlock and fromBlock to hexstring.\n    let {\n      toBlock,\n      fromBlock\n    } = filter;\n    if (!(0, web3_validator_1.isNullish)(toBlock)) {\n      if (typeof toBlock === 'number' || typeof toBlock === 'bigint') {\n        toBlock = (0, web3_utils_1.numberToHex)(toBlock);\n      }\n    }\n    if (!(0, web3_validator_1.isNullish)(fromBlock)) {\n      if (typeof fromBlock === 'number' || typeof fromBlock === 'bigint') {\n        fromBlock = (0, web3_utils_1.numberToHex)(fromBlock);\n      }\n    }\n    const formattedFilter = Object.assign(Object.assign({}, filter), {\n      fromBlock,\n      toBlock\n    });\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getLogs(web3Context.requestManager, formattedFilter);\n    const result = response.map(res => {\n      if (typeof res === 'string') {\n        return res;\n      }\n      return (0, web3_utils_1.format)(schemas_js_1.logSchema, res, returnFormat);\n    });\n    return result;\n  });\n}\nexports.getLogs = getLogs;\n/**\n * View additional documentations here: {@link Web3Eth.getChainId}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getChainId(web3Context, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getChainId(web3Context.requestManager);\n    return (0, web3_utils_1.format)({\n      format: 'uint'\n    },\n    // Response is number in hex formatted string\n    response, returnFormat);\n  });\n}\nexports.getChainId = getChainId;\n/**\n * View additional documentations here: {@link Web3Eth.getProof}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getProof(web3Context, address, storageKeys, blockNumber = web3Context.defaultBlock, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const storageKeysFormatted = storageKeys.map(storageKey => (0, web3_utils_1.format)({\n      format: 'bytes'\n    }, storageKey, web3_types_1.ETH_DATA_FORMAT));\n    const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(blockNumber) ? blockNumber : (0, web3_utils_1.format)({\n      format: 'uint'\n    }, blockNumber, web3_types_1.ETH_DATA_FORMAT);\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getProof(web3Context.requestManager, address, storageKeysFormatted, blockNumberFormatted);\n    return (0, web3_utils_1.format)(schemas_js_1.accountSchema, response, returnFormat);\n  });\n}\nexports.getProof = getProof;\n// TODO Throwing an error with Geth, but not Infura\n// TODO gasUsedRatio and reward not formatting\n/**\n * View additional documentations here: {@link Web3Eth.getFeeHistory}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction getFeeHistory(web3Context, blockCount, newestBlock = web3Context.defaultBlock, rewardPercentiles, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const blockCountFormatted = (0, web3_utils_1.format)({\n      format: 'uint'\n    }, blockCount, web3_types_1.ETH_DATA_FORMAT);\n    const newestBlockFormatted = (0, web3_validator_1.isBlockTag)(newestBlock) ? newestBlock : (0, web3_utils_1.format)({\n      format: 'uint'\n    }, newestBlock, web3_types_1.ETH_DATA_FORMAT);\n    const rewardPercentilesFormatted = (0, web3_utils_1.format)({\n      type: 'array',\n      items: {\n        format: 'uint'\n      }\n    }, rewardPercentiles, constants_js_1.NUMBER_DATA_FORMAT);\n    const response = yield web3_rpc_methods_1.ethRpcMethods.getFeeHistory(web3Context.requestManager, blockCountFormatted, newestBlockFormatted, rewardPercentilesFormatted);\n    return (0, web3_utils_1.format)(schemas_js_1.feeHistorySchema, response, returnFormat);\n  });\n}\nexports.getFeeHistory = getFeeHistory;\n/**\n * View additional documentations here: {@link Web3Eth.createAccessList}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction createAccessList(web3Context, transaction, blockNumber = web3Context.defaultBlock, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const blockNumberFormatted = (0, web3_validator_1.isBlockTag)(blockNumber) ? blockNumber : (0, web3_utils_1.format)({\n      format: 'uint'\n    }, blockNumber, web3_types_1.ETH_DATA_FORMAT);\n    const response = yield web3_rpc_methods_1.ethRpcMethods.createAccessList(web3Context.requestManager, (0, format_transaction_js_1.formatTransaction)(transaction, web3_types_1.ETH_DATA_FORMAT), blockNumberFormatted);\n    return (0, web3_utils_1.format)(schemas_js_1.accessListResultSchema, response, returnFormat);\n  });\n}\nexports.createAccessList = createAccessList;\n/**\n * View additional documentations here: {@link Web3Eth.signTypedData}\n * @param web3Context ({@link Web3Context}) Web3 configuration object that contains things such as the provider, request manager, wallet, etc.\n */\nfunction signTypedData(web3Context, address, typedData, useLegacy, returnFormat) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const response = yield web3_rpc_methods_1.ethRpcMethods.signTypedData(web3Context.requestManager, address, typedData, useLegacy);\n    return (0, web3_utils_1.format)({\n      format: 'bytes'\n    }, response, returnFormat);\n  });\n}\nexports.signTypedData = signTypedData;","map":{"version":3,"names":["require","web3_types_1","web3_core_1","web3_utils_1","web3_eth_accounts_1","web3_validator_1","web3_errors_1","web3_rpc_methods_1","decode_signed_transaction_js_1","schemas_js_1","transaction_builder_js_1","format_transaction_js_1","try_send_transaction_js_1","wait_for_transaction_receipt_js_1","constants_js_1","send_tx_helper_js_1","getProtocolVersion","web3Context","__awaiter","ethRpcMethods","requestManager","exports","isSyncing","getSyncing","getCoinbase","isMining","getMining","getHashRate","returnFormat","response","format","getGasPrice","getBlockNumber","getBalance","address","blockNumber","defaultBlock","blockNumberFormatted","isBlockTag","ETH_DATA_FORMAT","getStorageAt","storageSlot","storageSlotFormatted","getCode","getBlock","block","hydrated","isBytes","blockHashFormatted","getBlockByHash","getBlockByNumber","blockSchema","getBlockTransactionCount","getBlockTransactionCountByHash","getBlockTransactionCountByNumber","getBlockUncleCount","getUncleCountByBlockHash","getUncleCountByBlockNumber","getUncle","uncleIndex","uncleIndexFormatted","getUncleByBlockHashAndIndex","getUncleByBlockNumberAndIndex","getTransaction","transactionHash","transactionHashFormatted","DEFAULT_RETURN_FORMAT","getTransactionByHash","isNullish","formatTransaction","fillInputAndData","getPendingTransactions","map","transaction","getTransactionFromBlock","transactionIndex","transactionIndexFormatted","getTransactionByBlockHashAndIndex","getTransactionByBlockNumberAndIndex","getTransactionReceipt","transactionReceiptSchema","getTransactionCount","sendTransaction","options","checkRevertBeforeSending","promiEvent","Web3PromiEvent","resolve","reject","setImmediate","sendTxHelper","SendTxHelper","transactionFormatted","Object","assign","from","getTransactionFromOrToAttr","to","populateGasPrice","emitSending","wallet","get","signAndSend","tx","emitSent","emitTransactionHash","transactionReceipt","waitForTransactionReceipt","transactionReceiptFormatted","getReceiptWithEvents","emitReceipt","handleResolve","receipt","emitConfirmation","error","handleError","sendSignedTransaction","signedTransaction","signedTransactionFormattedHex","unSerializedTransaction","TransactionFactory","fromSerializedData","bytesToUint8Array","hexToBytes","unSerializedTransactionWithFrom","toJSON","getSenderAddress","toString","v","r","s","txWithoutSigParams","__rest","trySendTransaction","sendRawTransaction","sign","message","addressOrIndex","messageFormatted","_a","signed","SignatureObjectSchema","SignatureError","signTransaction","isString","decodeSignedTransaction","raw","call","estimateGas","getLogs","filter","toBlock","fromBlock","numberToHex","formattedFilter","result","res","logSchema","getChainId","getProof","storageKeys","storageKeysFormatted","storageKey","accountSchema","getFeeHistory","blockCount","newestBlock","rewardPercentiles","blockCountFormatted","newestBlockFormatted","rewardPercentilesFormatted","type","items","NUMBER_DATA_FORMAT","feeHistorySchema","createAccessList","accessListResultSchema","signTypedData","typedData","useLegacy"],"sources":["../../src/rpc_method_wrappers.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}