{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Web3EventEmitter = void 0;\nconst web3_utils_1 = require(\"web3-utils\");\nclass Web3EventEmitter {\n  constructor() {\n    this._emitter = new web3_utils_1.EventEmitter();\n  }\n  on(eventName, fn) {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this._emitter.on(eventName, fn);\n  }\n  once(eventName, fn) {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this._emitter.once(eventName, fn);\n  }\n  off(eventName, fn) {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    this._emitter.off(eventName, fn);\n  }\n  emit(eventName, params) {\n    this._emitter.emit(eventName, params);\n  }\n  listenerCount(eventName) {\n    return this._emitter.listenerCount(eventName);\n  }\n  listeners(eventName) {\n    return this._emitter.listeners(eventName);\n  }\n  eventNames() {\n    return this._emitter.eventNames();\n  }\n  removeAllListeners() {\n    return this._emitter.removeAllListeners();\n  }\n  setMaxListenerWarningThreshold(maxListenersWarningThreshold) {\n    this._emitter.setMaxListeners(maxListenersWarningThreshold);\n  }\n  getMaxListeners() {\n    return this._emitter.getMaxListeners();\n  }\n}\nexports.Web3EventEmitter = Web3EventEmitter;","map":{"version":3,"names":["web3_utils_1","require","Web3EventEmitter","constructor","_emitter","EventEmitter","on","eventName","fn","once","off","emit","params","listenerCount","listeners","eventNames","removeAllListeners","setMaxListenerWarningThreshold","maxListenersWarningThreshold","setMaxListeners","getMaxListeners","exports"],"sources":["../../src/web3_event_emitter.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAiBA,MAAAA,YAAA,GAAAC,OAAA;AAYA,MAAaC,gBAAgB;EAA7BC,YAAA;IACkB,KAAAC,QAAQ,GAAG,IAAIJ,YAAA,CAAAK,YAAY,EAAE;EA0C/C;EAxCQC,EAAEA,CAA4BC,SAAY,EAAEC,EAA2B;IAC7E;IACA,IAAI,CAACJ,QAAQ,CAACE,EAAE,CAACC,SAAS,EAAEC,EAAE,CAAC;EAChC;EAEOC,IAAIA,CAA4BF,SAAY,EAAEC,EAA2B;IAC/E;IACA,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAACF,SAAS,EAAEC,EAAE,CAAC;EAClC;EAEOE,GAAGA,CAA4BH,SAAY,EAAEC,EAA2B;IAC9E;IACA,IAAI,CAACJ,QAAQ,CAACM,GAAG,CAACH,SAAS,EAAEC,EAAE,CAAC;EACjC;EAEOG,IAAIA,CAA4BJ,SAAY,EAAEK,MAAY;IAChE,IAAI,CAACR,QAAQ,CAACO,IAAI,CAACJ,SAAS,EAAEK,MAAM,CAAC;EACtC;EAEOC,aAAaA,CAA4BN,SAAY;IAC3D,OAAO,IAAI,CAACH,QAAQ,CAACS,aAAa,CAACN,SAAS,CAAC;EAC9C;EAEOO,SAASA,CAA4BP,SAAY;IACvD,OAAO,IAAI,CAACH,QAAQ,CAACU,SAAS,CAACP,SAAS,CAAC;EAC1C;EAEOQ,UAAUA,CAAA;IAChB,OAAO,IAAI,CAACX,QAAQ,CAACW,UAAU,EAAE;EAClC;EAEOC,kBAAkBA,CAAA;IACxB,OAAO,IAAI,CAACZ,QAAQ,CAACY,kBAAkB,EAAE;EAC1C;EACOC,8BAA8BA,CAACC,4BAAoC;IACzE,IAAI,CAACd,QAAQ,CAACe,eAAe,CAACD,4BAA4B,CAAC;EAC5D;EACOE,eAAeA,CAAA;IACrB,OAAO,IAAI,CAAChB,QAAQ,CAACgB,eAAe,EAAE;EACvC;;AA1CDC,OAAA,CAAAnB,gBAAA,GAAAA,gBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}