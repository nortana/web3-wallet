{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getDataFeeEIP2930 = exports.getAccessListJSON = exports.verifyAccessList = exports.getAccessListData = exports.checkMaxInitCodeSize = void 0;\nconst web3_utils_1 = require(\"web3-utils\");\nconst utils_js_1 = require(\"../common/utils.js\");\nconst types_js_1 = require(\"./types.js\");\nconst checkMaxInitCodeSize = (common, length) => {\n  const maxInitCodeSize = common.param('vm', 'maxInitCodeSize');\n  if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n    throw new Error(`the initcode size of this transaction is too large: it is ${length} while the max is ${common.param('vm', 'maxInitCodeSize')}`);\n  }\n};\nexports.checkMaxInitCodeSize = checkMaxInitCodeSize;\nconst getAccessListData = accessList => {\n  let AccessListJSON;\n  let uint8arrayAccessList;\n  if ((0, types_js_1.isAccessList)(accessList)) {\n    AccessListJSON = accessList;\n    const newAccessList = [];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < accessList.length; i += 1) {\n      const item = accessList[i];\n      const addressBytes = (0, utils_js_1.toUint8Array)(item.address);\n      const storageItems = [];\n      // eslint-disable-next-line @typescript-eslint/prefer-for-of\n      for (let index = 0; index < item.storageKeys.length; index += 1) {\n        storageItems.push((0, utils_js_1.toUint8Array)(item.storageKeys[index]));\n      }\n      newAccessList.push([addressBytes, storageItems]);\n    }\n    uint8arrayAccessList = newAccessList;\n  } else {\n    uint8arrayAccessList = accessList !== null && accessList !== void 0 ? accessList : [];\n    // build the JSON\n    const json = [];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < uint8arrayAccessList.length; i += 1) {\n      const data = uint8arrayAccessList[i];\n      const address = (0, web3_utils_1.bytesToHex)(data[0]);\n      const storageKeys = [];\n      // eslint-disable-next-line @typescript-eslint/prefer-for-of\n      for (let item = 0; item < data[1].length; item += 1) {\n        storageKeys.push((0, web3_utils_1.bytesToHex)(data[1][item]));\n      }\n      const jsonItem = {\n        address,\n        storageKeys\n      };\n      json.push(jsonItem);\n    }\n    AccessListJSON = json;\n  }\n  return {\n    AccessListJSON,\n    accessList: uint8arrayAccessList\n  };\n};\nexports.getAccessListData = getAccessListData;\nconst verifyAccessList = accessList => {\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let key = 0; key < accessList.length; key += 1) {\n    const accessListItem = accessList[key];\n    const address = accessListItem[0];\n    const storageSlots = accessListItem[1];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/consistent-type-assertions\n    if (accessListItem[2] !== undefined) {\n      throw new Error('Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.');\n    }\n    if (address.length !== 20) {\n      throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes');\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot += 1) {\n      if (storageSlots[storageSlot].length !== 32) {\n        throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes');\n      }\n    }\n  }\n};\nexports.verifyAccessList = verifyAccessList;\nconst getAccessListJSON = accessList => {\n  const accessListJSON = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let index = 0; index < accessList.length; index += 1) {\n    const item = accessList[index];\n    const JSONItem = {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/consistent-type-assertions\n      address: (0, web3_utils_1.bytesToHex)((0, utils_js_1.setLengthLeft)(item[0], 20)),\n      storageKeys: []\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-assignment, @typescript-eslint/prefer-optional-chain\n    const storageSlots = item && item[1];\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let slot = 0; slot < storageSlots.length; slot += 1) {\n      const storageSlot = storageSlots[slot];\n      JSONItem.storageKeys.push((0, web3_utils_1.bytesToHex)((0, utils_js_1.setLengthLeft)(storageSlot, 32)));\n    }\n    accessListJSON.push(JSONItem);\n  }\n  return accessListJSON;\n};\nexports.getAccessListJSON = getAccessListJSON;\nconst getDataFeeEIP2930 = (accessList, common) => {\n  const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost');\n  const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost');\n  let slots = 0;\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let index = 0; index < accessList.length; index += 1) {\n    const item = accessList[index];\n    const storageSlots = item[1];\n    slots += storageSlots.length;\n  }\n  const addresses = accessList.length;\n  return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost);\n};\nexports.getDataFeeEIP2930 = getDataFeeEIP2930;","map":{"version":3,"names":["web3_utils_1","require","utils_js_1","types_js_1","checkMaxInitCodeSize","common","length","maxInitCodeSize","param","BigInt","Error","exports","getAccessListData","accessList","AccessListJSON","uint8arrayAccessList","isAccessList","newAccessList","i","item","addressBytes","toUint8Array","address","storageItems","index","storageKeys","push","json","data","bytesToHex","jsonItem","verifyAccessList","key","accessListItem","storageSlots","undefined","storageSlot","getAccessListJSON","accessListJSON","JSONItem","setLengthLeft","slot","getDataFeeEIP2930","accessListStorageKeyCost","accessListAddressCost","slots","addresses","Number"],"sources":["../../../src/tx/utils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}