{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nrequire(\"core-js/modules/es.array.push.js\");\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Web3SubscriptionManager = void 0;\nconst web3_types_1 = require(\"web3-types\");\nconst web3_errors_1 = require(\"web3-errors\");\nconst web3_utils_1 = require(\"web3-utils\");\nconst utils_js_1 = require(\"./utils.js\");\nconst web3_request_manager_js_1 = require(\"./web3_request_manager.js\");\nclass Web3SubscriptionManager {\n  constructor(requestManager, registeredSubscriptions, tolerateUnlinkedSubscription = false) {\n    this.requestManager = requestManager;\n    this.registeredSubscriptions = registeredSubscriptions;\n    this.tolerateUnlinkedSubscription = tolerateUnlinkedSubscription;\n    this._subscriptions = new Map();\n    this.requestManager.on(web3_request_manager_js_1.Web3RequestManagerEvent.BEFORE_PROVIDER_CHANGE, () => __awaiter(this, void 0, void 0, function* () {\n      yield this.unsubscribe();\n    }));\n    this.requestManager.on(web3_request_manager_js_1.Web3RequestManagerEvent.PROVIDER_CHANGED, () => {\n      this.clear();\n      this.listenToProviderEvents();\n    });\n    this.listenToProviderEvents();\n  }\n  listenToProviderEvents() {\n    const providerAsWebProvider = this.requestManager.provider;\n    if (!this.requestManager.provider || typeof (providerAsWebProvider === null || providerAsWebProvider === void 0 ? void 0 : providerAsWebProvider.supportsSubscriptions) === 'function' && !(providerAsWebProvider === null || providerAsWebProvider === void 0 ? void 0 : providerAsWebProvider.supportsSubscriptions())) {\n      return;\n    }\n    if (typeof this.requestManager.provider.on === 'function') {\n      if (typeof this.requestManager.provider.request === 'function') {\n        // Listen to provider messages and data\n        this.requestManager.provider.on('message',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument\n        message => this.messageListener(message));\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-argument\n        providerAsWebProvider.on('data', data => this.messageListener(data));\n      }\n    }\n  }\n  messageListener(data) {\n    var _a, _b, _c;\n    if (!data) {\n      throw new web3_errors_1.SubscriptionError('Should not call messageListener with no data. Type was');\n    }\n    const subscriptionId = ((_a = data.params) === null || _a === void 0 ? void 0 : _a.subscription) || ((_b = data.data) === null || _b === void 0 ? void 0 : _b.subscription) || ((_c = data.id) === null || _c === void 0 ? void 0 : _c.toString(16));\n    // Process if the received data is related to a subscription\n    if (subscriptionId) {\n      const sub = this._subscriptions.get(subscriptionId);\n      sub === null || sub === void 0 ? void 0 : sub.processSubscriptionData(data);\n    }\n  }\n  /**\n   * Will create a new subscription\n   *\n   * @param name - The subscription you want to subscribe to\n   * @param args - Optional additional parameters, depending on the subscription type\n   * @param returnFormat- ({@link DataFormat} defaults to {@link DEFAULT_RETURN_FORMAT}) - Specifies how the return data from the call should be formatted.\n   *\n   * Will subscribe to a specific topic (note: name)\n   * @returns The subscription object\n   */\n  subscribe(name, args, returnFormat = web3_types_1.DEFAULT_RETURN_FORMAT) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const Klass = this.registeredSubscriptions[name];\n      if (!Klass) {\n        throw new web3_errors_1.SubscriptionError('Invalid subscription type');\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n      const subscription = new Klass(args !== null && args !== void 0 ? args : undefined, {\n        subscriptionManager: this,\n        returnFormat\n      });\n      yield this.addSubscription(subscription);\n      return subscription;\n    });\n  }\n  /**\n   * Will returns all subscriptions.\n   */\n  get subscriptions() {\n    return this._subscriptions;\n  }\n  /**\n   *\n   * Adds an instance of {@link Web3Subscription} and subscribes to it\n   *\n   * @param sub - A {@link Web3Subscription} object\n   */\n  addSubscription(sub) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this.requestManager.provider) {\n        throw new web3_errors_1.ProviderError('Provider not available');\n      }\n      if (!this.supportsSubscriptions()) {\n        throw new web3_errors_1.SubscriptionError('The current provider does not support subscriptions');\n      }\n      if (sub.id && this._subscriptions.has(sub.id)) {\n        throw new web3_errors_1.SubscriptionError(`Subscription with id \"${sub.id}\" already exists`);\n      }\n      yield sub.sendSubscriptionRequest();\n      if ((0, web3_utils_1.isNullish)(sub.id)) {\n        throw new web3_errors_1.SubscriptionError('Subscription is not subscribed yet.');\n      }\n      this._subscriptions.set(sub.id, sub);\n      return sub.id;\n    });\n  }\n  /**\n   * Will clear a subscription\n   *\n   * @param id - The subscription of type {@link Web3Subscription}  to remove\n   */\n  removeSubscription(sub) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        id\n      } = sub;\n      if ((0, web3_utils_1.isNullish)(id)) {\n        throw new web3_errors_1.SubscriptionError('Subscription is not subscribed yet. Or, had already been unsubscribed but not through the Subscription Manager.');\n      }\n      if (!this._subscriptions.has(id) && !this.tolerateUnlinkedSubscription) {\n        throw new web3_errors_1.SubscriptionError(`Subscription with id \"${id.toString()}\" does not exists`);\n      }\n      yield sub.sendUnsubscribeRequest();\n      this._subscriptions.delete(id);\n      return id;\n    });\n  }\n  /**\n   * Will unsubscribe all subscriptions that fulfill the condition\n   *\n   * @param condition - A function that access and `id` and a `subscription` and return `true` or `false`\n   * @returns An array of all the un-subscribed subscriptions\n   */\n  unsubscribe(condition) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const result = [];\n      for (const [id, sub] of this.subscriptions.entries()) {\n        if (!condition || typeof condition === 'function' && condition({\n          id,\n          sub\n        })) {\n          result.push(this.removeSubscription(sub));\n        }\n      }\n      return Promise.all(result);\n    });\n  }\n  /**\n   * Clears all subscriptions\n   */\n  clear() {\n    this._subscriptions.clear();\n  }\n  /**\n   * Check whether the current provider supports subscriptions.\n   *\n   * @returns `true` or `false` depending on if the current provider supports subscriptions\n   */\n  supportsSubscriptions() {\n    return (0, web3_utils_1.isNullish)(this.requestManager.provider) ? false : (0, utils_js_1.isSupportSubscriptions)(this.requestManager.provider);\n  }\n}\nexports.Web3SubscriptionManager = Web3SubscriptionManager;","map":{"version":3,"names":["require","web3_types_1","web3_errors_1","web3_utils_1","utils_js_1","web3_request_manager_js_1","Web3SubscriptionManager","constructor","requestManager","registeredSubscriptions","tolerateUnlinkedSubscription","_subscriptions","Map","on","Web3RequestManagerEvent","BEFORE_PROVIDER_CHANGE","__awaiter","unsubscribe","PROVIDER_CHANGED","clear","listenToProviderEvents","providerAsWebProvider","provider","supportsSubscriptions","request","message","messageListener","data","SubscriptionError","subscriptionId","_a","params","subscription","_b","_c","id","toString","sub","get","processSubscriptionData","subscribe","name","args","returnFormat","DEFAULT_RETURN_FORMAT","Klass","undefined","subscriptionManager","addSubscription","subscriptions","ProviderError","has","sendSubscriptionRequest","isNullish","set","removeSubscription","sendUnsubscribeRequest","delete","condition","result","entries","push","Promise","all","isSupportSubscriptions","exports"],"sources":["../../src/web3_subscription_manager.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}