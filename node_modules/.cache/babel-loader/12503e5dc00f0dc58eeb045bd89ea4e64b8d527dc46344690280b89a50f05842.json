{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RequestAlreadySentError = exports.PendingRequestsOnReconnectingError = exports.MaxAttemptsReachedOnReconnectingError = exports.ConnectionCloseError = exports.ConnectionNotOpenError = exports.ConnectionTimeoutError = exports.InvalidConnectionError = exports.ConnectionError = void 0;\nconst error_codes_js_1 = require(\"../error_codes.js\");\nconst web3_error_base_js_1 = require(\"../web3_error_base.js\");\nclass ConnectionError extends web3_error_base_js_1.BaseWeb3Error {\n  constructor(message, event) {\n    super(message);\n    this.code = error_codes_js_1.ERR_CONN;\n    if (event) {\n      this.errorCode = event.code;\n      this.errorReason = event.reason;\n    }\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      errorCode: this.errorCode,\n      errorReason: this.errorReason\n    });\n  }\n}\nexports.ConnectionError = ConnectionError;\nclass InvalidConnectionError extends ConnectionError {\n  constructor(host, event) {\n    super(`CONNECTION ERROR: Couldn't connect to node ${host}.`, event);\n    this.host = host;\n    this.code = error_codes_js_1.ERR_CONN_INVALID;\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      host: this.host\n    });\n  }\n}\nexports.InvalidConnectionError = InvalidConnectionError;\nclass ConnectionTimeoutError extends ConnectionError {\n  constructor(duration) {\n    super(`CONNECTION TIMEOUT: timeout of ${duration}ms achieved`);\n    this.duration = duration;\n    this.code = error_codes_js_1.ERR_CONN_TIMEOUT;\n  }\n  toJSON() {\n    return Object.assign(Object.assign({}, super.toJSON()), {\n      duration: this.duration\n    });\n  }\n}\nexports.ConnectionTimeoutError = ConnectionTimeoutError;\nclass ConnectionNotOpenError extends ConnectionError {\n  constructor(event) {\n    super('Connection not open', event);\n    this.code = error_codes_js_1.ERR_CONN_NOT_OPEN;\n  }\n}\nexports.ConnectionNotOpenError = ConnectionNotOpenError;\nclass ConnectionCloseError extends ConnectionError {\n  constructor(event) {\n    var _a, _b;\n    super(`CONNECTION ERROR: The connection got closed with the close code ${(_a = event === null || event === void 0 ? void 0 : event.code) !== null && _a !== void 0 ? _a : ''} and the following reason string ${(_b = event === null || event === void 0 ? void 0 : event.reason) !== null && _b !== void 0 ? _b : ''}`, event);\n    this.code = error_codes_js_1.ERR_CONN_CLOSE;\n  }\n}\nexports.ConnectionCloseError = ConnectionCloseError;\nclass MaxAttemptsReachedOnReconnectingError extends ConnectionError {\n  constructor(numberOfAttempts) {\n    super(`Maximum number of reconnect attempts reached! (${numberOfAttempts})`);\n    this.code = error_codes_js_1.ERR_CONN_MAX_ATTEMPTS;\n  }\n}\nexports.MaxAttemptsReachedOnReconnectingError = MaxAttemptsReachedOnReconnectingError;\nclass PendingRequestsOnReconnectingError extends ConnectionError {\n  constructor() {\n    super('CONNECTION ERROR: Provider started to reconnect before the response got received!');\n    this.code = error_codes_js_1.ERR_CONN_PENDING_REQUESTS;\n  }\n}\nexports.PendingRequestsOnReconnectingError = PendingRequestsOnReconnectingError;\nclass RequestAlreadySentError extends ConnectionError {\n  constructor(id) {\n    super(`Request already sent with following id: ${id}`);\n    this.code = error_codes_js_1.ERR_REQ_ALREADY_SENT;\n  }\n}\nexports.RequestAlreadySentError = RequestAlreadySentError;","map":{"version":3,"names":["error_codes_js_1","require","web3_error_base_js_1","ConnectionError","BaseWeb3Error","constructor","message","event","code","ERR_CONN","errorCode","errorReason","reason","toJSON","Object","assign","exports","InvalidConnectionError","host","ERR_CONN_INVALID","ConnectionTimeoutError","duration","ERR_CONN_TIMEOUT","ConnectionNotOpenError","ERR_CONN_NOT_OPEN","ConnectionCloseError","_a","_b","ERR_CONN_CLOSE","MaxAttemptsReachedOnReconnectingError","numberOfAttempts","ERR_CONN_MAX_ATTEMPTS","PendingRequestsOnReconnectingError","ERR_CONN_PENDING_REQUESTS","RequestAlreadySentError","id","ERR_REQ_ALREADY_SENT"],"sources":["../../../src/errors/connection_errors.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAAA,gBAAA,GAAAC,OAAA;AAUA,MAAAC,oBAAA,GAAAD,OAAA;AAEA,MAAaE,eAAgB,SAAQD,oBAAA,CAAAE,aAAa;EAKjDC,YAAmBC,OAAe,EAAEC,KAAuB;IAC1D,KAAK,CAACD,OAAO,CAAC;IALR,KAAAE,IAAI,GAAGR,gBAAA,CAAAS,QAAQ;IAOrB,IAAIF,KAAK,EAAE;MACV,IAAI,CAACG,SAAS,GAAGH,KAAK,CAACC,IAAI;MAC3B,IAAI,CAACG,WAAW,GAAGJ,KAAK,CAACK,MAAM;;EAEjC;EAEOC,MAAMA,CAAA;IACZ,OAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAY,KAAK,CAACF,MAAM,EAAE;MAAEH,SAAS,EAAE,IAAI,CAACA,SAAS;MAAEC,WAAW,EAAE,IAAI,CAACA;IAAW;EACrF;;AAhBDK,OAAA,CAAAb,eAAA,GAAAA,eAAA;AAmBA,MAAac,sBAAuB,SAAQd,eAAe;EAC1DE,YAA0Ba,IAAY,EAAEX,KAAuB;IAC9D,KAAK,CAAC,8CAA8CW,IAAI,GAAG,EAAEX,KAAK,CAAC;IAD1C,KAAAW,IAAI,GAAJA,IAAI;IAE7B,IAAI,CAACV,IAAI,GAAGR,gBAAA,CAAAmB,gBAAgB;EAC7B;EAEON,MAAMA,CAAA;IACZ,OAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAY,KAAK,CAACF,MAAM,EAAE;MAAEK,IAAI,EAAE,IAAI,CAACA;IAAI;EAC5C;;AARDF,OAAA,CAAAC,sBAAA,GAAAA,sBAAA;AAWA,MAAaG,sBAAuB,SAAQjB,eAAe;EAC1DE,YAA0BgB,QAAgB;IACzC,KAAK,CAAC,kCAAkCA,QAAQ,aAAa,CAAC;IADrC,KAAAA,QAAQ,GAARA,QAAQ;IAEjC,IAAI,CAACb,IAAI,GAAGR,gBAAA,CAAAsB,gBAAgB;EAC7B;EAEOT,MAAMA,CAAA;IACZ,OAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAY,KAAK,CAACF,MAAM,EAAE;MAAEQ,QAAQ,EAAE,IAAI,CAACA;IAAQ;EACpD;;AARDL,OAAA,CAAAI,sBAAA,GAAAA,sBAAA;AAWA,MAAaG,sBAAuB,SAAQpB,eAAe;EAC1DE,YAAmBE,KAAuB;IACzC,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IACnC,IAAI,CAACC,IAAI,GAAGR,gBAAA,CAAAwB,iBAAiB;EAC9B;;AAJDR,OAAA,CAAAO,sBAAA,GAAAA,sBAAA;AAOA,MAAaE,oBAAqB,SAAQtB,eAAe;EACxDE,YAAmBE,KAAuB;;IACzC,KAAK,CACJ,mEACC,CAAAmB,EAAA,GAAAnB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI,cAAAkB,EAAA,cAAAA,EAAA,GAAI,EAChB,oCAAoC,CAAAC,EAAA,GAAApB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,MAAM,cAAAe,EAAA,cAAAA,EAAA,GAAI,EAAE,EAAE,EACzDpB,KAAK,CACL;IACD,IAAI,CAACC,IAAI,GAAGR,gBAAA,CAAA4B,cAAc;EAC3B;;AATDZ,OAAA,CAAAS,oBAAA,GAAAA,oBAAA;AAYA,MAAaI,qCAAsC,SAAQ1B,eAAe;EACzEE,YAAmByB,gBAAwB;IAC1C,KAAK,CAAC,kDAAkDA,gBAAgB,GAAG,CAAC;IAC5E,IAAI,CAACtB,IAAI,GAAGR,gBAAA,CAAA+B,qBAAqB;EAClC;;AAJDf,OAAA,CAAAa,qCAAA,GAAAA,qCAAA;AAOA,MAAaG,kCAAmC,SAAQ7B,eAAe;EACtEE,YAAA;IACC,KAAK,CAAC,mFAAmF,CAAC;IAC1F,IAAI,CAACG,IAAI,GAAGR,gBAAA,CAAAiC,yBAAyB;EACtC;;AAJDjB,OAAA,CAAAgB,kCAAA,GAAAA,kCAAA;AAOA,MAAaE,uBAAwB,SAAQ/B,eAAe;EAC3DE,YAAmB8B,EAAmB;IACrC,KAAK,CAAC,2CAA2CA,EAAE,EAAE,CAAC;IACtD,IAAI,CAAC3B,IAAI,GAAGR,gBAAA,CAAAoC,oBAAoB;EACjC;;AAJDpB,OAAA,CAAAkB,uBAAA,GAAAA,uBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}