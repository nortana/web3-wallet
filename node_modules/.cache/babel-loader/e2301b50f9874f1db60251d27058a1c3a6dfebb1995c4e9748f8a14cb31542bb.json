{"ast":null,"code":"\"use strict\";\n\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebSocketProvider = void 0;\nconst isomorphic_ws_1 = __importDefault(require(\"isomorphic-ws\"));\nconst web3_utils_1 = require(\"web3-utils\");\nconst web3_errors_1 = require(\"web3-errors\");\n/**\n * Use WebSocketProvider to connect to a Node using a WebSocket connection, i.e. over the `ws` or `wss` protocol.\n *\n * @example\n * ```ts\n * const provider = new WebSocketProvider(\n * \t\t`ws://localhost:8545`,\n * \t\t{\n * \t\t\theaders: {\n * \t\t\t\t// to provide the API key if the Node requires the key to be inside the `headers` for example:\n * \t\t\t\t'x-api-key': '<Api key>',\n * \t\t\t},\n * \t\t},\n * \t\t{\n * \t\t\tdelay: 500,\n * \t\t\tautoReconnect: true,\n * \t\t\tmaxAttempts: 10,\n * \t\t},\n * \t);\n * ```\n *\n * The second and the third parameters are both optional. And you can for example, the second parameter could be an empty object or undefined.\n *  * @example\n * ```ts\n * const provider = new WebSocketProvider(\n * \t\t`ws://localhost:8545`,\n * \t\t{},\n * \t\t{\n * \t\t\tdelay: 500,\n * \t\t\tautoReconnect: true,\n * \t\t\tmaxAttempts: 10,\n * \t\t},\n * \t);\n * ```\n */\nclass WebSocketProvider extends web3_utils_1.SocketProvider {\n  /**\n   * This is a class used for Web Socket connections. It extends the abstract class SocketProvider {@link SocketProvider} that extends the EIP-1193 provider {@link EIP1193Provider}.\n   * @param socketPath - The path to the Web Socket.\n   * @param socketOptions - The options for the Web Socket client.\n   * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}\n   */\n  // this constructor is to specify the type for `socketOptions` for a better intellisense.\n  // eslint-disable-next-line no-useless-constructor\n  constructor(socketPath, socketOptions, reconnectOptions) {\n    super(socketPath, socketOptions, reconnectOptions);\n  }\n  // eslint-disable-next-line class-methods-use-this\n  _validateProviderPath(providerUrl) {\n    return typeof providerUrl === 'string' ? /^ws(s)?:\\/\\//i.test(providerUrl) : false;\n  }\n  getStatus() {\n    if (this._socketConnection && !(0, web3_utils_1.isNullish)(this._socketConnection)) {\n      switch (this._socketConnection.readyState) {\n        case this._socketConnection.CONNECTING:\n          {\n            return 'connecting';\n          }\n        case this._socketConnection.OPEN:\n          {\n            return 'connected';\n          }\n        default:\n          {\n            return 'disconnected';\n          }\n      }\n    }\n    return 'disconnected';\n  }\n  _openSocketConnection() {\n    this._socketConnection = new isomorphic_ws_1.default(this._socketPath, undefined, this._socketOptions && Object.keys(this._socketOptions).length === 0 ? undefined : this._socketOptions);\n  }\n  _closeSocketConnection(code, data) {\n    var _a;\n    (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.close(code, data);\n  }\n  _sendToSocket(payload) {\n    var _a;\n    if (this.getStatus() === 'disconnected') {\n      throw new web3_errors_1.ConnectionNotOpenError();\n    }\n    (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.send(JSON.stringify(payload));\n  }\n  _parseResponses(event) {\n    return this.chunkResponseParser.parseResponse(event.data);\n  }\n  _addSocketListeners() {\n    var _a, _b, _c, _d;\n    (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.addEventListener('open', this._onOpenHandler);\n    (_b = this._socketConnection) === null || _b === void 0 ? void 0 : _b.addEventListener('message', this._onMessageHandler);\n    (_c = this._socketConnection) === null || _c === void 0 ? void 0 : _c.addEventListener('close', e => this._onCloseHandler(e));\n    (_d = this._socketConnection) === null || _d === void 0 ? void 0 : _d.addEventListener('error', this._onErrorHandler);\n  }\n  _removeSocketListeners() {\n    var _a, _b, _c;\n    (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.removeEventListener('message', this._onMessageHandler);\n    (_b = this._socketConnection) === null || _b === void 0 ? void 0 : _b.removeEventListener('open', this._onOpenHandler);\n    (_c = this._socketConnection) === null || _c === void 0 ? void 0 : _c.removeEventListener('close', this._onCloseHandler);\n    // note: we intentionally keep the error event listener to be able to emit it in case an error happens when closing the connection\n  }\n  _onCloseEvent(event) {\n    var _a;\n    if (this._reconnectOptions.autoReconnect && (![1000, 1001].includes(event.code) || !event.wasClean)) {\n      this._reconnect();\n      return;\n    }\n    this._clearQueues(event);\n    this._removeSocketListeners();\n    this._onDisconnect(event.code, event.reason);\n    // disconnect was successful and can safely remove error listener\n    (_a = this._socketConnection) === null || _a === void 0 ? void 0 : _a.removeEventListener('error', this._onErrorHandler);\n  }\n}\nexports.default = WebSocketProvider;\nexports.WebSocketProvider = WebSocketProvider;","map":{"version":3,"names":["isomorphic_ws_1","__importDefault","require","web3_utils_1","web3_errors_1","WebSocketProvider","SocketProvider","constructor","socketPath","socketOptions","reconnectOptions","_validateProviderPath","providerUrl","test","getStatus","_socketConnection","isNullish","readyState","CONNECTING","OPEN","_openSocketConnection","default","_socketPath","undefined","_socketOptions","Object","keys","length","_closeSocketConnection","code","data","_a","close","_sendToSocket","payload","ConnectionNotOpenError","send","JSON","stringify","_parseResponses","event","chunkResponseParser","parseResponse","_addSocketListeners","addEventListener","_onOpenHandler","_b","_onMessageHandler","_c","e","_onCloseHandler","_d","_onErrorHandler","_removeSocketListeners","removeEventListener","_onCloseEvent","_reconnectOptions","autoReconnect","includes","wasClean","_reconnect","_clearQueues","_onDisconnect","reason","exports"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}